// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TodoSvc.Infrastructure;

#nullable disable

namespace TodoSvc.Infrastructure.Data.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    [Migration("20250417152924_fix todoitems")]
    partial class fixtodoitems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Todo.Domain.Entities.TodoMembers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MemberFullName")
                        .HasColumnType("text");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<string>("MemberName")
                        .HasColumnType("text");

                    b.Property<Guid>("TodoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("TodoMembers");
                });

            modelBuilder.Entity("TodoSvc.Domain.Entities.DailyTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("ObjectId")
                        .HasColumnType("uuid");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<Guid?>("TodoItemId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("DailyTasks");
                });

            modelBuilder.Entity("TodoSvc.Domain.Entities.TodoHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<Guid>("TodoId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("TodoHistories");
                });

            modelBuilder.Entity("TodoSvc.Domain.Entities.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("Assignee")
                        .HasColumnType("uuid");

                    b.Property<string>("AssigneeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("Assigner")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CompleteDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ObjectId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Owner")
                        .HasColumnType("uuid");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentTodoItemId")
                        .HasColumnType("uuid");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParentTodoItemId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("TodoSvc.Domain.Entities.TodoItemComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentTodoItemCommentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TodoItemId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentTodoItemCommentId");

                    b.HasIndex("TodoItemId");

                    b.ToTable("TodoItemsComments");
                });

            modelBuilder.Entity("TodoSvc.Domain.Entities.TodoItem", b =>
                {
                    b.HasOne("TodoSvc.Domain.Entities.TodoItem", "ParentTodoItem")
                        .WithMany("SubTodoItems")
                        .HasForeignKey("ParentTodoItemId");

                    b.Navigation("ParentTodoItem");
                });

            modelBuilder.Entity("TodoSvc.Domain.Entities.TodoItemComment", b =>
                {
                    b.HasOne("TodoSvc.Domain.Entities.TodoItemComment", "ParentTodoItemComment")
                        .WithMany()
                        .HasForeignKey("ParentTodoItemCommentId");

                    b.HasOne("TodoSvc.Domain.Entities.TodoItem", null)
                        .WithMany("Comments")
                        .HasForeignKey("TodoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentTodoItemComment");
                });

            modelBuilder.Entity("TodoSvc.Domain.Entities.TodoItem", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("SubTodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
