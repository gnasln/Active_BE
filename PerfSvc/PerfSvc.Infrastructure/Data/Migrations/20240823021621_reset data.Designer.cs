// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PerfSvc.Infrastructure;

#nullable disable

namespace PerfSvc.Infrastructure.Data.Migrations
{
    [DbContext(typeof(PerfDbContext))]
    [Migration("20240823021621_reset data")]
    partial class resetdata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PerfSvc.Domain.Entities.KeyResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ObjectTBId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ObjectTBId");

                    b.ToTable("KeyResults");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.KeyResultMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("KeyResultId")
                        .HasColumnType("uuid");

                    b.Property<string>("MemberFullName")
                        .HasColumnType("text");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<string>("MemberName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("KeyResultId");

                    b.ToTable("KeyResultMembers");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.KeyresultHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("ObjectTBId")
                        .HasColumnType("uuid");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("keyresultid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("KeyresultHistories");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.ObjectHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Priority")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("objecttbid")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("objectHistories");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.ObjectMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MemberFullName")
                        .HasColumnType("text");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<string>("MemberName")
                        .HasColumnType("text");

                    b.Property<Guid>("ObjectTBId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ObjectTBId");

                    b.ToTable("ObjectMembers");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.ObjectTB", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("ObjectTBs");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.Unit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uuid");

                    b.Property<string>("ManagerName")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentUnitId")
                        .HasColumnType("uuid");

                    b.Property<int?>("Priority")
                        .HasColumnType("integer");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("TodoId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ParentUnitId");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.UnitMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("MemberFullName")
                        .HasColumnType("text");

                    b.Property<Guid>("MemberId")
                        .HasColumnType("uuid");

                    b.Property<string>("MemberName")
                        .HasColumnType("text");

                    b.Property<Guid>("UnitId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UnitId");

                    b.ToTable("UnitMembers");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.KeyResult", b =>
                {
                    b.HasOne("PerfSvc.Domain.Entities.ObjectTB", null)
                        .WithMany("KeyResults")
                        .HasForeignKey("ObjectTBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.KeyResultMember", b =>
                {
                    b.HasOne("PerfSvc.Domain.Entities.KeyResult", null)
                        .WithMany("KeyResultMembers")
                        .HasForeignKey("KeyResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.ObjectMember", b =>
                {
                    b.HasOne("PerfSvc.Domain.Entities.ObjectTB", null)
                        .WithMany("ObjectMembers")
                        .HasForeignKey("ObjectTBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.ObjectTB", b =>
                {
                    b.HasOne("PerfSvc.Domain.Entities.Unit", null)
                        .WithMany("Objects")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.Unit", b =>
                {
                    b.HasOne("PerfSvc.Domain.Entities.Unit", "ParentUnit")
                        .WithMany("SubUnits")
                        .HasForeignKey("ParentUnitId");

                    b.Navigation("ParentUnit");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.UnitMember", b =>
                {
                    b.HasOne("PerfSvc.Domain.Entities.Unit", null)
                        .WithMany("UnitMembers")
                        .HasForeignKey("UnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.KeyResult", b =>
                {
                    b.Navigation("KeyResultMembers");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.ObjectTB", b =>
                {
                    b.Navigation("KeyResults");

                    b.Navigation("ObjectMembers");
                });

            modelBuilder.Entity("PerfSvc.Domain.Entities.Unit", b =>
                {
                    b.Navigation("Objects");

                    b.Navigation("SubUnits");

                    b.Navigation("UnitMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
